% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.vivid.R
\name{plot.vivid}
\alias{plot.vivid}
\title{vivid: Plot the interaction/importance matrix created from \code{vividMatrix}}
\usage{
\method{plot}{vivid}(
  x,
  plotly = FALSE,
  intLow = "floralwhite",
  intHigh = "dodgerblue4",
  impLow = "floralwhite",
  impHigh = "firebrick1",
  top = NULL,
  reorder = TRUE,
  intPal = rev(sequential_hcl(palette = "Blues 3", n = 11)),
  impPal = rev(sequential_hcl(palette = "Reds 3", n = 11)),
  fitlimsInt = NULL,
  fitlimsImp = NULL,
  minImp = NULL,
  maxImp = NULL,
  minInt = 0,
  maxInt = NULL,
  angle = NULL,
  thresholdValue = 0,
  label = FALSE,
  labelNudge = 0.05,
  layout = "circle",
  cluster = F,
  clusterType = cluster_optimal,
  clusterLayout = layout_with_fr,
  fitlims = NULL,
  plotType = "lollipop",
  type = c("heatMap", "network", "allInteractions", "importance"),
  ...
)
}
\arguments{
\item{x}{An object of class \code{vivid} created via vividMatrix.}

\item{plotly}{If TRUE then an interactive plotly heatMap plot is displayed.}

\item{intLow}{Colour, set by the user, to display low interaction strengths for plotly.}

\item{intHigh}{Colour, set by the user, to display high interaction strengths for plotly.}

\item{impLow}{Colour, set by the user, to display low importance values for plotly.}

\item{impHigh}{Colour, set by the user, to display high importance values for plotly.}

\item{top}{Returns the first part of the interaction matrix and resulting plot. Similar to head() function.
For use with \code{"heatMap"} and \code{"allInteractions"}.}

\item{intPal}{A colorspace colour palette to display the interaction values.}

\item{impPal}{A colorspace colour palette to display the importance values.}

\item{minImp}{Minimum importance value to be displayed on the legend.}

\item{maxImp}{Maximum importance value to be displayed on the legend.}

\item{minInt}{Minimum interaction strength to be displayed on the legend.}

\item{maxInt}{Maximum interaction strength to be displayed on the legend.}

\item{angle}{The angle to display the x-axis labels.}

\item{thresholdValue}{A value chosen by the user which will show all the edges with weights (i.e., the interacions) above that value.
For example, if thresholdValue = 0.2, then only the the interacions greater than 0.2 will be displayed.
For use with \code{"network"}.}

\item{label}{If label = TRUE the numerical value for the interaction strength will be displayed. For use with \code{"network"}.}

\item{labelNudge}{A value, set by the user, to determine the y_postioning of the variables names.
A higher value will postion the label farther above the nodes. For use with \code{"network"}.}

\item{layout}{Determines the shape, or layout, of the plotted network graph.}

\item{cluster}{If cluster = TRUE, then the data is clustered in groups.}

\item{clusterType}{= Network-based clustering. Any of the appropriate cluster types from the igraph package are allowed.}

\item{clusterLayout}{= Determines the shape, or layout, of the clustered plotted graph.}

\item{plotType}{The type of interaction/importance plot to display, either "lollipop", "barplot", or "circleBar".
For use with \code{"allInteractions"}, and \code{"importance"}}

\item{type}{Type of plot required.}

\item{...}{Not currently implemented.}
}
\value{
A plot chosen from the type argument.
}
\description{
This function is used to create vivid-based plots.
}
\examples{
# Load in the data:
aq <- data.frame(airquality)
aq <- na.omit(aq)

# Run an mlr ranger model:
library(mlr3)
library(mlr3learners)
library(ranger)
aq_Task <- TaskRegr$new(id = "airQ", backend = aq, target = "Ozone")
aq_lrn <- lrn("regr.ranger", importance = "permutation")
aq_Mod <- aq_lrn$train(aq_Task)

#' # Create matrix
myMat <- vividMatrix(task = aq_Task,  model = aq_Mod)

# Create plot:
plot(myMat, type = "heatMap")

}
