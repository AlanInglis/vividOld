% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intHeatmap.R
\name{intHeatmap}
\alias{intHeatmap}
\title{intHeatmap}
\usage{
intHeatmap(
  task,
  model,
  method = "randomForest",
  plotly = FALSE,
  intLow = "floralwhite",
  intHigh = "dodgerblue4",
  impLow = "white",
  impHigh = "firebrick1",
  top = 0,
  ...
)
}
\arguments{
\item{task}{Task created from the mlr package, either regression or classification.}

\item{model}{Any machine learning model.}

\item{method}{A list of variable importance methods to be set by the user. These can include any of the importance methods contained within the mlr package. The default is method = randomForest.}

\item{plotly}{If plotly = TRUE then it displays an interactive plotly plot.}

\item{intLow}{Colour, set by the user, to display low interaction strengths.}

\item{intHigh}{Colour, set by the user, to display high interaction strengths.}

\item{impLow}{Colour, set by the user, to display low importance values.}

\item{impHigh}{Colour, set by the user, to display high importance values.}

\item{top}{Returns the first part of the interaction matrix and resulting plot. Similar to head() function.}

\item{...}{Not currently implemented}
}
\value{
A heatmap style plot dispaying interaction strength on the off-diagonal and variable importance on the diagonal.
}
\description{
Create a Heatmap style plot displaying Variable Importance and Variable Interaction
}
\examples{
# Load in the data:
aq <- data.frame(airquality)
aq <- na.omit(aq)

# Run an mlr random forest model:
library(mlr)
library(randomForest)
aqRgrTask  <- makeRegrTask(data = aq, target = "Ozone")
aqRegrLrn <- makeLearner("regr.randomForest")
aqMod <- train(aqRegrLrn, aqRgrTask)

# Create plot:
intHeatmap(aqRgrTask, aqMod, method = "randomForest_importance", interact = F)

}
