% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intHeatmap.R
\name{intHeatmap}
\alias{intHeatmap}
\title{intHeatmap}
\usage{
intHeatmap(
  task,
  model,
  iml = FALSE,
  plotly = FALSE,
  intLow = "floralwhite",
  intHigh = "dodgerblue4",
  impLow = "white",
  impHigh = "firebrick1",
  top = NULL,
  reorder = TRUE,
  ...
)
}
\arguments{
\item{task}{Task created from the mlr package, either regression or classification.}

\item{model}{Any machine learning model.}

\item{iml}{If TRUE then agnostic variable importance measures are generated.}

\item{plotly}{If TRUE then an interactive plot is displayed.}

\item{intLow}{Colour, set by the user, to display low interaction strengths.}

\item{intHigh}{Colour, set by the user, to display high interaction strengths.}

\item{impLow}{Colour, set by the user, to display low importance values.}

\item{impHigh}{Colour, set by the user, to display high importance values.}

\item{top}{Returns the first part of the interaction matrix and resulting plot. Similar to head() function.}

\item{reorder}{If TRUE (default) uses DendSer to reorder the matrix of interactions and variable importances}

\item{...}{Not currently implemented}
}
\description{
Plots a Heatmap-tyle display showingVariable Importance and Variable Interaction
}
\examples{
# Load in the data:
aq <- data.frame(airquality)
aq <- na.omit(aq)

# Run an mlr random forest model:
library(mlr)
library(randomForest)
aqRgrTask  <- makeRegrTask(data = aq, target = "Ozone")
aqRegrLrn <- makeLearner("regr.randomForest")
aqMod <- train(aqRegrLrn, aqRgrTask)

# Create plot:
intHeatmap(aqRgrTask, aqMod, method = "randomForest_importance", interact = F)

}
