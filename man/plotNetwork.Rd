% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotNetwork.R
\name{plotNetwork}
\alias{plotNetwork}
\title{plotNetwork}
\usage{
plotNetwork(
  task,
  model,
  thresholdValue = 0,
  label = FALSE,
  minInt = 0,
  maxInt = NULL,
  minImp = 0,
  maxImp = NULL,
  labelNudge = 0.05,
  layout = "circle",
  cluster = F,
  ...
)
}
\arguments{
\item{task}{Task created from the mlr package, either regression or classification.}

\item{model}{Any machine learning model.}

\item{thresholdValue}{A value chosen by the user which will show all the edges with weights (i.e., the interacions) above that value. For example, if thresholdValue = 0.2, then only the the interacions greater than 0.2 will be displayed.}

\item{label}{If label = TRUE the numerical value for the interaction strength will be displayed.}

\item{minInt}{Minimum interaction strength to be displayed on the legend.}

\item{maxInt}{Maximum interaction strength to be displayed on the legend.}

\item{minImp}{Minimum importance value to be displayed on the legend.}

\item{maxImp}{Maximum importance value to be displayed on the legend.}

\item{labelNudge}{A value, set by the user, to determine the y_postioning of the variables names. A higher value will postion the label farther above the nodes.}

\item{layout}{Determines the shape, or layout, of the plotted graph.}

\item{cluster}{If cluster = TRUE, then the data is clustered in groups.}

\item{...}{Not currently implemented.}
}
\value{
A newtwork style plot displaying interaction strength between variables on the edges and variable importance on the nodes.
}
\description{
Create a Network style plot displaying Variable
 and Variable Interaction.
}
\examples{
# Load in the data:
aq <- data.frame(airquality)
aq <- na.omit(aq)

# Run an mlr random forest model:
library(mlr)
library(randomForest)
aqRgrTask  <- makeRegrTask(data = aq, target = "Ozone")
aqRegrLrn <- makeLearner("regr.randomForest")
aqMod <- train(aqRegrLrn, aqRgrTask)

# Create graph:
plotNetwork(task = aqRgrTask, model = aqMod,
thresholdValue = 0, cluster = F)

}
