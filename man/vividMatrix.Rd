% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interactionMatrix.R
\name{vividMatrix}
\alias{vividMatrix}
\title{vividMatrix}
\usage{
vividMatrix(
  task,
  model,
  filter = NULL,
  gridSize = 10,
  normalize = FALSE,
  nmax = 500,
  sqrt = TRUE,
  reorder = TRUE,
  main = NULL,
  ...
)
}
\arguments{
\item{task}{Task created from the mlr3 package, either regression or classification.}

\item{model}{A machine learning model created from mlr3 task and learner.}

\item{gridSize}{The size of the grid for evaluating the predictions.}

\item{normalize}{Should the variances explained be normalized? Default is FALSE.}

\item{nmax}{Maximum number of data rows to consider.}

\item{sqrt}{In order to reproduce Friedman's H statistic, resulting values are root transformed. Set to FALSE if squared values should be returned.}

\item{reorder}{If TRUE (default) uses DendSer to reorder the matrix of interactions and variable importances.}

\item{main}{Define main category for classification.}
}
\value{
A matrix of values
}
\description{
Creates a matrix displaying Variable importance on the diagonal
 and Variable Interaction on the off-diagonal.
}
\examples{
# Load in the data:
aq <- data.frame(airquality)
aq <- na.omit(aq)

# Run an mlr ranger model:
library(mlr3)
library(mlr3learners)
library(ranger)
aq_Task <- TaskRegr$new(id = "airQ", backend = aq, target = "Ozone")
aq_lrn <- lrn("regr.ranger", importance = "permutation")
aq_Mod <- aq_lrn$train(aq_Task)

# Create matrix
myMat <- vividMatrix(task = aq_Task, model = aq_Mod)

# Create graph:
plot(myMat, type = "heatMap")

}
